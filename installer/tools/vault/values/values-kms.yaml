injector:
  enabled: true

server:
  podLabels:
    dtlabel: vault-kms
  ha:
    enabled: true
    replicas: 1
    raft:
      enabled: true
      setNodeId: true

  standalone:
    enabled: false

  dataStorage:
    enabled: true
    size: 10Gi
    storageClass: null
    accessMode: ReadWriteOnce

  extraEnvironmentVars:
    VAULT_RAFT_NODE_ID: "$(HOSTNAME)"
    VAULT_METRICS_ENABLED: "true"
    VAULT_TELEMETRY_PROMETHEUS_RETENTION_TIME: "30s"
    VAULT_LOG_LEVEL: "info"

  extraVolumes:
    - type: secret
      name: vault-ts
      path: /vault/userconfig/vault-ts
    - type: secret
      name: vault-transit-token
      path: /vault/userconfig/vault-transit-token
      items:
        - key: token
          path: token

  config: |
    ui = true

    listener "tcp" {
      address       = "0.0.0.0:8200"
      tls_cert_file = "/vault/userconfig/vault-ts/tls.crt"
      tls_key_file  = "/vault/userconfig/vault-ts/tls.key"
      telemetry {
        unauthenticated_metrics_access = "false"
      }
    }

    storage "raft" {
      path    = "/vault/data"
      node_id = "${VAULT_RAFT_NODE_ID}"
    }

    seal "transit" {
      address         = "https://vault-internal:8200"
      token_file      = "/vault/userconfig/vault-transit-token/token"
      disable_renewal = "false"
      key_name        = "vault-unseal-key"
      mount_path      = "transit/"
      tls_skip_verify = "true"
    }

    telemetry {
      prometheus_retention_time = "30s"
      disable_hostname = true
    }

    audit {
      type = "file"
      options {
        path = "/vault/logs/audit.log"
      }
    }

    disable_mlock = true

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "1"

  service:
    enabled: true
    type: ClusterIP
    port: 8200
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "/v1/sys/metrics"
      prometheus.io/port: "8200"

  init:
    enabled: false